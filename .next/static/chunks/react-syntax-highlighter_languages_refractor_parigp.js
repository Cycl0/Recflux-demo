"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_parigp"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/parigp.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/parigp.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nmodule.exports = parigp\nparigp.displayName = 'parigp'\nparigp.aliases = []\nfunction parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: (function () {\n      var keywords = [\n        'breakpoint',\n        'break',\n        'dbg_down',\n        'dbg_err',\n        'dbg_up',\n        'dbg_x',\n        'forcomposite',\n        'fordiv',\n        'forell',\n        'forpart',\n        'forprime',\n        'forstep',\n        'forsubgroup',\n        'forvec',\n        'for',\n        'iferr',\n        'if',\n        'local',\n        'my',\n        'next',\n        'return',\n        'until',\n        'while'\n      ]\n      keywords = keywords\n        .map(function (keyword) {\n          return keyword.split('').join(' *')\n        })\n        .join('|')\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\n    })(),\n    function: /\\b\\w(?:[\\w ]*\\w)?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern:\n        /((?:\\. *\\. *)?)(?:\\b\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *(?:[+-] *)?\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator:\n      /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wYXJpZ3AuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwwSUFBMEksSUFBSTtBQUM5SSx5QkFBeUIsTUFBTTtBQUMvQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wYXJpZ3AuanM/NGY1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBwYXJpZ3BcbnBhcmlncC5kaXNwbGF5TmFtZSA9ICdwYXJpZ3AnXG5wYXJpZ3AuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBwYXJpZ3AoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnBhcmlncCA9IHtcbiAgICBjb21tZW50OiAvXFwvXFwqW1xcc1xcU10qP1xcKlxcL3xcXFxcXFxcXC4qLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXCJcXFxcXFxyXFxuXXxcXFxcLikqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAvLyBQQVJJL0dQIGRvZXMgbm90IGNhcmUgYWJvdXQgd2hpdGUgc3BhY2VzIGF0IGFsbFxuICAgIC8vIHNvIGxldCdzIHByb2Nlc3MgdGhlIGtleXdvcmRzIHRvIGJ1aWxkIGFuIGFwcHJvcHJpYXRlIHJlZ2V4cFxuICAgIC8vIChlLmcuIFwiYiAqciAqZSAqYSAqa1wiLCBldGMuKVxuICAgIGtleXdvcmQ6IChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIga2V5d29yZHMgPSBbXG4gICAgICAgICdicmVha3BvaW50JyxcbiAgICAgICAgJ2JyZWFrJyxcbiAgICAgICAgJ2RiZ19kb3duJyxcbiAgICAgICAgJ2RiZ19lcnInLFxuICAgICAgICAnZGJnX3VwJyxcbiAgICAgICAgJ2RiZ194JyxcbiAgICAgICAgJ2ZvcmNvbXBvc2l0ZScsXG4gICAgICAgICdmb3JkaXYnLFxuICAgICAgICAnZm9yZWxsJyxcbiAgICAgICAgJ2ZvcnBhcnQnLFxuICAgICAgICAnZm9ycHJpbWUnLFxuICAgICAgICAnZm9yc3RlcCcsXG4gICAgICAgICdmb3JzdWJncm91cCcsXG4gICAgICAgICdmb3J2ZWMnLFxuICAgICAgICAnZm9yJyxcbiAgICAgICAgJ2lmZXJyJyxcbiAgICAgICAgJ2lmJyxcbiAgICAgICAgJ2xvY2FsJyxcbiAgICAgICAgJ215JyxcbiAgICAgICAgJ25leHQnLFxuICAgICAgICAncmV0dXJuJyxcbiAgICAgICAgJ3VudGlsJyxcbiAgICAgICAgJ3doaWxlJ1xuICAgICAgXVxuICAgICAga2V5d29yZHMgPSBrZXl3b3Jkc1xuICAgICAgICAubWFwKGZ1bmN0aW9uIChrZXl3b3JkKSB7XG4gICAgICAgICAgcmV0dXJuIGtleXdvcmQuc3BsaXQoJycpLmpvaW4oJyAqJylcbiAgICAgICAgfSlcbiAgICAgICAgLmpvaW4oJ3wnKVxuICAgICAgcmV0dXJuIFJlZ0V4cCgnXFxcXGIoPzonICsga2V5d29yZHMgKyAnKVxcXFxiJylcbiAgICB9KSgpLFxuICAgIGZ1bmN0aW9uOiAvXFxiXFx3KD86W1xcdyBdKlxcdyk/KD89ICpcXCgpLyxcbiAgICBudW1iZXI6IHtcbiAgICAgIC8vIFRoZSBsb29rYmVoaW5kIGFuZCB0aGUgbmVnYXRpdmUgbG9va2FoZWFkIHByZXZlbnQgZnJvbSBicmVha2luZyB0aGUgLi4gb3BlcmF0b3JcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oKD86XFwuICpcXC4gKik/KSg/OlxcYlxcZCg/OiAqXFxkKSooPzogKig/IVxcLiAqXFwuKVxcLig/OiAqXFxkKSopP3xcXC4gKlxcZCg/OiAqXFxkKSopKD86ICplICooPzpbKy1dICopP1xcZCg/OiAqXFxkKSopPy9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgb3BlcmF0b3I6XG4gICAgICAvXFwuICpcXC58WypcXC8hXSg/OiAqPSk/fCUoPzogKj18KD86ICojKT8oPzogKicpKik/fFxcKyg/OiAqWys9XSk/fC0oPzogKlstPT5dKT98PCg/OiAqPnwoPzogKjwpPyg/OiAqPSk/KT98Pig/OiAqPik/KD86ICo9KT98PSg/OiAqPSl7MCwyfXxcXFxcKD86ICpcXC8pPyg/OiAqPSk/fCYoPzogKiYpP3xcXHwgKlxcfHxbJyN+Xl0vLFxuICAgIHB1bmN0dWF0aW9uOiAvW1xcW1xcXXt9KCkuLDo7fF0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/parigp.js\n"));

/***/ })

}]);