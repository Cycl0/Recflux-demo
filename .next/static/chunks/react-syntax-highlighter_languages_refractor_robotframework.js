"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_robotframework"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/robotframework.js":
/*!*******************************************************!*\
  !*** ./node_modules/refractor/lang/robotframework.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nmodule.exports = robotframework\nrobotframework.displayName = 'robotframework'\nrobotframework.aliases = []\nfunction robotframework(Prism) {\n  ;(function (Prism) {\n    var comment = {\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    var variable = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[$@&%]\\{|\\}$/\n      }\n    }\n    function createSection(name, inside) {\n      var extendecInside = {}\n      extendecInside['section-header'] = {\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\n        alias: 'keyword'\n      } // copy inside tokens\n      for (var token in inside) {\n        extendecInside[token] = inside[token]\n      }\n      extendecInside['tag'] = {\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\[|\\]/\n        }\n      }\n      extendecInside['variable'] = variable\n      extendecInside['comment'] = comment\n      return {\n        pattern: RegExp(\n          /^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(\n            /<name>/g,\n            function () {\n              return name\n            }\n          ),\n          'im'\n        ),\n        alias: 'section',\n        inside: extendecInside\n      }\n    }\n    var docTag = {\n      pattern:\n        /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n      lookbehind: true,\n      alias: 'string'\n    }\n    var testNameLike = {\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        variable: variable\n      }\n    }\n    var testPropertyLike = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      inside: {\n        variable: variable\n      }\n    }\n    Prism.languages['robotframework'] = {\n      settings: createSection('Settings', {\n        documentation: {\n          pattern:\n            /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        property: {\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n          lookbehind: true\n        }\n      }),\n      variables: createSection('Variables'),\n      'test-cases': createSection('Test Cases', {\n        'test-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      keywords: createSection('Keywords', {\n        'keyword-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      tasks: createSection('Tasks', {\n        'task-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      comment: comment\n    }\n    Prism.languages.robot = Prism.languages['robotframework']\n  })(Prism)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yb2JvdGZyYW1ld29yay5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLDJCQUEyQixFQUFFO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLEVBQUUsV0FBVyxPQUFPLFFBQVEsSUFBSSxRQUFRLElBQUk7QUFDOUU7QUFDQTtBQUNBLCtCQUErQixHQUFHO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsRUFBRSxNQUFNLEVBQUU7QUFDbEM7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsRUFBRTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsRUFBRSxxQkFBcUIsRUFBRSxpQkFBaUIsRUFBRTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxFQUFFLGdEQUFnRCxFQUFFO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixFQUFFLG9CQUFvQixFQUFFO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxFQUFFLGdEQUFnRCxFQUFFO0FBQzVGO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxvQ0FBb0MsRUFBRTtBQUN0QztBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yb2JvdGZyYW1ld29yay5qcz80ODZhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvYm90ZnJhbWV3b3JrXG5yb2JvdGZyYW1ld29yay5kaXNwbGF5TmFtZSA9ICdyb2JvdGZyYW1ld29yaydcbnJvYm90ZnJhbWV3b3JrLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gcm9ib3RmcmFtZXdvcmsoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgY29tbWVudCA9IHtcbiAgICAgIHBhdHRlcm46IC8oXlsgXFx0XSp8IHsyfXxcXHQpIy4qL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfVxuICAgIHZhciB2YXJpYWJsZSA9IHtcbiAgICAgIHBhdHRlcm46IC8oKD86XnxbXlxcXFxdKSg/OlxcXFx7Mn0pKilbJEAmJV1cXHsoPzpbXnt9XFxyXFxuXXxcXHtbXnt9XFxyXFxuXSpcXH0pKlxcfS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXlskQCYlXVxce3xcXH0kL1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBjcmVhdGVTZWN0aW9uKG5hbWUsIGluc2lkZSkge1xuICAgICAgdmFyIGV4dGVuZGVjSW5zaWRlID0ge31cbiAgICAgIGV4dGVuZGVjSW5zaWRlWydzZWN0aW9uLWhlYWRlciddID0ge1xuICAgICAgICBwYXR0ZXJuOiAvXiA/XFwqezN9Lis/XFwqezN9LyxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfSAvLyBjb3B5IGluc2lkZSB0b2tlbnNcbiAgICAgIGZvciAodmFyIHRva2VuIGluIGluc2lkZSkge1xuICAgICAgICBleHRlbmRlY0luc2lkZVt0b2tlbl0gPSBpbnNpZGVbdG9rZW5dXG4gICAgICB9XG4gICAgICBleHRlbmRlY0luc2lkZVsndGFnJ10gPSB7XG4gICAgICAgIHBhdHRlcm46IC8oW1xcclxcbl0oPzogezJ9fFxcdClbIFxcdF0qKVxcW1stXFx3XStcXF0vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcW3xcXF0vXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGV4dGVuZGVjSW5zaWRlWyd2YXJpYWJsZSddID0gdmFyaWFibGVcbiAgICAgIGV4dGVuZGVjSW5zaWRlWydjb21tZW50J10gPSBjb21tZW50XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgL14gP1xcKnszfVsgXFx0XSo8bmFtZT5bIFxcdF0qXFwqezN9KD86LnxbXFxyXFxuXSg/IVxcKnszfSkpKi8uc291cmNlLnJlcGxhY2UoXG4gICAgICAgICAgICAvPG5hbWU+L2csXG4gICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBuYW1lXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKSxcbiAgICAgICAgICAnaW0nXG4gICAgICAgICksXG4gICAgICAgIGFsaWFzOiAnc2VjdGlvbicsXG4gICAgICAgIGluc2lkZTogZXh0ZW5kZWNJbnNpZGVcbiAgICAgIH1cbiAgICB9XG4gICAgdmFyIGRvY1RhZyA9IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXFxbRG9jdW1lbnRhdGlvblxcXSg/OiB7Mn18XFx0KVsgXFx0XSopKD8hWyBcXHRdfCMpKD86LnwoPzpcXHJcXG4/fFxcbilbIFxcdF0qXFwuezN9KSsvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgIH1cbiAgICB2YXIgdGVzdE5hbWVMaWtlID0ge1xuICAgICAgcGF0dGVybjogLyhbXFxyXFxuXSA/KSg/ISMpKD86XFxTKD86WyBcXHRdXFxTKSopKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdmdW5jdGlvbicsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgdmFyaWFibGU6IHZhcmlhYmxlXG4gICAgICB9XG4gICAgfVxuICAgIHZhciB0ZXN0UHJvcGVydHlMaWtlID0ge1xuICAgICAgcGF0dGVybjogLyhbXFxyXFxuXSg/OiB7Mn18XFx0KVsgXFx0XSopKD8hXFxbfFxcLnszfXwjKSg/OlxcUyg/OlsgXFx0XVxcUykqKSsvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB2YXJpYWJsZTogdmFyaWFibGVcbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzWydyb2JvdGZyYW1ld29yayddID0ge1xuICAgICAgc2V0dGluZ3M6IGNyZWF0ZVNlY3Rpb24oJ1NldHRpbmdzJywge1xuICAgICAgICBkb2N1bWVudGF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oW1xcclxcbl0gP0RvY3VtZW50YXRpb24oPzogezJ9fFxcdClbIFxcdF0qKSg/IVsgXFx0XXwjKSg/Oi58KD86XFxyXFxuP3xcXG4pWyBcXHRdKlxcLnszfSkrLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgICAgICB9LFxuICAgICAgICBwcm9wZXJ0eToge1xuICAgICAgICAgIHBhdHRlcm46IC8oW1xcclxcbl0gPykoPyFcXC57M318IykoPzpcXFMoPzpbIFxcdF1cXFMpKikrLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH0pLFxuICAgICAgdmFyaWFibGVzOiBjcmVhdGVTZWN0aW9uKCdWYXJpYWJsZXMnKSxcbiAgICAgICd0ZXN0LWNhc2VzJzogY3JlYXRlU2VjdGlvbignVGVzdCBDYXNlcycsIHtcbiAgICAgICAgJ3Rlc3QtbmFtZSc6IHRlc3ROYW1lTGlrZSxcbiAgICAgICAgZG9jdW1lbnRhdGlvbjogZG9jVGFnLFxuICAgICAgICBwcm9wZXJ0eTogdGVzdFByb3BlcnR5TGlrZVxuICAgICAgfSksXG4gICAgICBrZXl3b3JkczogY3JlYXRlU2VjdGlvbignS2V5d29yZHMnLCB7XG4gICAgICAgICdrZXl3b3JkLW5hbWUnOiB0ZXN0TmFtZUxpa2UsXG4gICAgICAgIGRvY3VtZW50YXRpb246IGRvY1RhZyxcbiAgICAgICAgcHJvcGVydHk6IHRlc3RQcm9wZXJ0eUxpa2VcbiAgICAgIH0pLFxuICAgICAgdGFza3M6IGNyZWF0ZVNlY3Rpb24oJ1Rhc2tzJywge1xuICAgICAgICAndGFzay1uYW1lJzogdGVzdE5hbWVMaWtlLFxuICAgICAgICBkb2N1bWVudGF0aW9uOiBkb2NUYWcsXG4gICAgICAgIHByb3BlcnR5OiB0ZXN0UHJvcGVydHlMaWtlXG4gICAgICB9KSxcbiAgICAgIGNvbW1lbnQ6IGNvbW1lbnRcbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLnJvYm90ID0gUHJpc20ubGFuZ3VhZ2VzWydyb2JvdGZyYW1ld29yayddXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/robotframework.js\n"));

/***/ })

}]);