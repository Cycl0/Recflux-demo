"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_stan"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/stan.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/stan.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nmodule.exports = stan\nstan.displayName = 'stan'\nstan.aliases = []\nfunction stan(Prism) {\n  ;(function (Prism) {\n    // https://mc-stan.org/docs/2_28/reference-manual/bnf-grammars.html\n    var higherOrderFunctions =\n      /\\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\\b/\n    Prism.languages.stan = {\n      comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n      string: {\n        // String literals can contain spaces and any printable ASCII characters except for \" and \\\n        // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals\n        pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n        greedy: true\n      },\n      directive: {\n        pattern: /^([ \\t]*)#include\\b.*/m,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'function-arg': {\n        pattern: RegExp(\n          '(' +\n            higherOrderFunctions.source +\n            /\\s*\\(\\s*/.source +\n            ')' +\n            /[a-zA-Z]\\w*/.source\n        ),\n        lookbehind: true,\n        alias: 'function'\n      },\n      constraint: {\n        pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          property: /\\b[a-z]\\w*(?=\\s*=)/i,\n          operator: /=/,\n          punctuation: /^<|>$|,/\n        }\n      },\n      keyword: [\n        {\n          pattern:\n            /\\bdata(?=\\s*\\{)|\\b(?:functions|generated|model|parameters|quantities|transformed)\\b/,\n          alias: 'program-block'\n        },\n        /\\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\\b/, // these are functions that are known to take another function as their first argument.\n        higherOrderFunctions\n      ],\n      function: /\\b[a-z]\\w*(?=\\s*\\()/i,\n      number:\n        /(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:E[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n      punctuation: /[()\\[\\]{},;]/\n    }\n    Prism.languages.stan.constraint.inside.expression.inside =\n      Prism.languages.stan\n  })(Prism)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zdGFuLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsRUFBRTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3N0YW4uanM/M2FjYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBzdGFuXG5zdGFuLmRpc3BsYXlOYW1lID0gJ3N0YW4nXG5zdGFuLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gc3RhbihQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIC8vIGh0dHBzOi8vbWMtc3Rhbi5vcmcvZG9jcy8yXzI4L3JlZmVyZW5jZS1tYW51YWwvYm5mLWdyYW1tYXJzLmh0bWxcbiAgICB2YXIgaGlnaGVyT3JkZXJGdW5jdGlvbnMgPVxuICAgICAgL1xcYig/OmFsZ2VicmFfc29sdmVyfGFsZ2VicmFfc29sdmVyX25ld3RvbnxpbnRlZ3JhdGVfMWR8aW50ZWdyYXRlX29kZXxpbnRlZ3JhdGVfb2RlX2JkZnxpbnRlZ3JhdGVfb2RlX3JrNDV8bWFwX3JlY3R8b2RlXyg/OmFkYW1zfGJkZnxja3JrfHJrNDUpKD86X3RvbCk/fG9kZV9hZGpvaW50X3RvbF9jdGx8cmVkdWNlX3N1bXxyZWR1Y2Vfc3VtX3N0YXRpYylcXGIvXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnN0YW4gPSB7XG4gICAgICBjb21tZW50OiAvXFwvXFwvLip8XFwvXFwqW1xcc1xcU10qP1xcKlxcL3wjKD8haW5jbHVkZSkuKi8sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgLy8gU3RyaW5nIGxpdGVyYWxzIGNhbiBjb250YWluIHNwYWNlcyBhbmQgYW55IHByaW50YWJsZSBBU0NJSSBjaGFyYWN0ZXJzIGV4Y2VwdCBmb3IgXCIgYW5kIFxcXG4gICAgICAgIC8vIGh0dHBzOi8vbWMtc3Rhbi5vcmcvZG9jcy8yXzI0L3JlZmVyZW5jZS1tYW51YWwvcHJpbnQtc3RhdGVtZW50cy1zZWN0aW9uLmh0bWwjc3RyaW5nLWxpdGVyYWxzXG4gICAgICAgIHBhdHRlcm46IC9cIltcXHgyMFxceDIxXFx4MjMtXFx4NUJcXHg1RC1cXHg3RV0qXCIvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBkaXJlY3RpdmU6IHtcbiAgICAgICAgcGF0dGVybjogL14oWyBcXHRdKikjaW5jbHVkZVxcYi4qL20sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgICB9LFxuICAgICAgJ2Z1bmN0aW9uLWFyZyc6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICcoJyArXG4gICAgICAgICAgICBoaWdoZXJPcmRlckZ1bmN0aW9ucy5zb3VyY2UgK1xuICAgICAgICAgICAgL1xccypcXChcXHMqLy5zb3VyY2UgK1xuICAgICAgICAgICAgJyknICtcbiAgICAgICAgICAgIC9bYS16QS1aXVxcdyovLnNvdXJjZVxuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgfSxcbiAgICAgIGNvbnN0cmFpbnQ6IHtcbiAgICAgICAgcGF0dGVybjogLyhcXGIoPzppbnR8bWF0cml4fHJlYWx8cm93X3ZlY3Rvcnx2ZWN0b3IpXFxzKik8W148Pl0qPi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGV4cHJlc3Npb246IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oPVxccyopXFxTKD86XFxTfFxccysoPyFcXHMpKSo/KD89XFxzKig/Oj4kfCxcXHMqXFx3K1xccyo9KSkvLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgIGluc2lkZTogbnVsbCAvLyBzZWUgYmVsb3dcbiAgICAgICAgICB9LFxuICAgICAgICAgIHByb3BlcnR5OiAvXFxiW2Etel1cXHcqKD89XFxzKj0pL2ksXG4gICAgICAgICAgb3BlcmF0b3I6IC89LyxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL148fD4kfCwvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgL1xcYmRhdGEoPz1cXHMqXFx7KXxcXGIoPzpmdW5jdGlvbnN8Z2VuZXJhdGVkfG1vZGVsfHBhcmFtZXRlcnN8cXVhbnRpdGllc3x0cmFuc2Zvcm1lZClcXGIvLFxuICAgICAgICAgIGFsaWFzOiAncHJvZ3JhbS1ibG9jaydcbiAgICAgICAgfSxcbiAgICAgICAgL1xcYig/OmFycmF5fGJyZWFrfGNob2xlc2t5X2ZhY3Rvcl9jb3JyfGNob2xlc2t5X2ZhY3Rvcl9jb3Z8Y29tcGxleHxjb250aW51ZXxjb3JyX21hdHJpeHxjb3ZfbWF0cml4fGRhdGF8ZWxzZXxmb3J8aWZ8aW58aW5jcmVtZW50X2xvZ19wcm9ifGludHxtYXRyaXh8b3JkZXJlZHxwb3NpdGl2ZV9vcmRlcmVkfHByaW50fHJlYWx8cmVqZWN0fHJldHVybnxyb3dfdmVjdG9yfHNpbXBsZXh8dGFyZ2V0fHVuaXRfdmVjdG9yfHZlY3Rvcnx2b2lkfHdoaWxlKVxcYi8sIC8vIHRoZXNlIGFyZSBmdW5jdGlvbnMgdGhhdCBhcmUga25vd24gdG8gdGFrZSBhbm90aGVyIGZ1bmN0aW9uIGFzIHRoZWlyIGZpcnN0IGFyZ3VtZW50LlxuICAgICAgICBoaWdoZXJPcmRlckZ1bmN0aW9uc1xuICAgICAgXSxcbiAgICAgIGZ1bmN0aW9uOiAvXFxiW2Etel1cXHcqKD89XFxzKlxcKCkvaSxcbiAgICAgIG51bWJlcjpcbiAgICAgICAgLyg/OlxcYlxcZCsoPzpfXFxkKykqKD86XFwuKD86XFxkKyg/Ol9cXGQrKSopPyk/fFxcQlxcLlxcZCsoPzpfXFxkKykqKSg/OkVbKy1dP1xcZCsoPzpfXFxkKykqKT9pPyg/IVxcdykvaSxcbiAgICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgICBvcGVyYXRvcjogLzwtfFxcLlsqL109P3xcXHxcXHw/fCYmfFshPTw+K1xcLSovXT0/fFsnXiV+PzpdLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvWygpXFxbXFxde30sO10vXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5zdGFuLmNvbnN0cmFpbnQuaW5zaWRlLmV4cHJlc3Npb24uaW5zaWRlID1cbiAgICAgIFByaXNtLmxhbmd1YWdlcy5zdGFuXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/stan.js\n"));

/***/ })

}]);