"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_uri"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/uri.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/uri.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nmodule.exports = uri\nuri.displayName = 'uri'\nuri.aliases = ['url']\nfunction uri(Prism) {\n  // https://tools.ietf.org/html/rfc3986#appendix-A\n  Prism.languages.uri = {\n    scheme: {\n      pattern: /^[a-z][a-z0-9+.-]*:/im,\n      greedy: true,\n      inside: {\n        'scheme-delimiter': /:$/\n      }\n    },\n    fragment: {\n      pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'fragment-delimiter': /^#/\n      }\n    },\n    query: {\n      pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'query-delimiter': {\n          pattern: /^\\?/,\n          greedy: true\n        },\n        'pair-delimiter': /[&;]/,\n        pair: {\n          pattern: /^[^=][\\s\\S]*/,\n          inside: {\n            key: /^[^=]+/,\n            value: {\n              pattern: /(^=)[\\s\\S]+/,\n              lookbehind: true\n            }\n          }\n        }\n      }\n    },\n    authority: {\n      pattern: RegExp(\n        /^\\/\\//.source + // [ userinfo \"@\" ]\n          /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source + // host\n          ('(?:' + // IP-literal\n            /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/\n              .source +\n            '|' + // IPv4address or registered name\n            /[\\w\\-.~!$&'()*+,;=%]*/.source +\n            ')') + // [ \":\" port ]\n          /(?::\\d*)?/.source,\n        'm'\n      ),\n      inside: {\n        'authority-delimiter': /^\\/\\//,\n        'user-info-segment': {\n          pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\n          inside: {\n            'user-info-delimiter': /@$/,\n            'user-info': /^[\\w\\-.~!$&'()*+,;=%:]+/\n          }\n        },\n        'port-segment': {\n          pattern: /:\\d*$/,\n          inside: {\n            'port-delimiter': /^:/,\n            port: /^\\d+/\n          }\n        },\n        host: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            'ip-literal': {\n              pattern: /^\\[[\\s\\S]+\\]$/,\n              inside: {\n                'ip-literal-delimiter': /^\\[|\\]$/,\n                'ipv-future': /^v[\\s\\S]+/,\n                'ipv6-address': /^[\\s\\S]+/\n              }\n            },\n            'ipv4-address':\n              /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]\\d{0,2})$/\n          }\n        }\n      }\n    },\n    path: {\n      pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\n      inside: {\n        'path-separator': /\\//\n      }\n    }\n  }\n  Prism.languages.url = Prism.languages.uri\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy91cmkuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQSxnQ0FBZ0MsS0FBSyxpQ0FBaUM7QUFDdEU7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLHVDQUF1QyxJQUFJLEtBQUssRUFBRSxvQkFBb0IsSUFBSTtBQUMxRTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3VyaS5qcz9lNzM5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHVyaVxudXJpLmRpc3BsYXlOYW1lID0gJ3VyaSdcbnVyaS5hbGlhc2VzID0gWyd1cmwnXVxuZnVuY3Rpb24gdXJpKFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmMzOTg2I2FwcGVuZGl4LUFcbiAgUHJpc20ubGFuZ3VhZ2VzLnVyaSA9IHtcbiAgICBzY2hlbWU6IHtcbiAgICAgIHBhdHRlcm46IC9eW2Etel1bYS16MC05Ky4tXSo6L2ltLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdzY2hlbWUtZGVsaW1pdGVyJzogLzokL1xuICAgICAgfVxuICAgIH0sXG4gICAgZnJhZ21lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8jW1xcd1xcLS5+ISQmJygpKissOz0lOkAvP10qLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAnZnJhZ21lbnQtZGVsaW1pdGVyJzogL14jL1xuICAgICAgfVxuICAgIH0sXG4gICAgcXVlcnk6IHtcbiAgICAgIHBhdHRlcm46IC9cXD9bXFx3XFwtLn4hJCYnKCkqKyw7PSU6QC8/XSovLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdxdWVyeS1kZWxpbWl0ZXInOiB7XG4gICAgICAgICAgcGF0dGVybjogL15cXD8vLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICAncGFpci1kZWxpbWl0ZXInOiAvWyY7XS8sXG4gICAgICAgIHBhaXI6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXltePV1bXFxzXFxTXSovLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAga2V5OiAvXltePV0rLyxcbiAgICAgICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC8oXj0pW1xcc1xcU10rLyxcbiAgICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgYXV0aG9yaXR5OiB7XG4gICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgIC9eXFwvXFwvLy5zb3VyY2UgKyAvLyBbIHVzZXJpbmZvIFwiQFwiIF1cbiAgICAgICAgICAvKD86W1xcd1xcLS5+ISQmJygpKissOz0lOl0qQCk/Ly5zb3VyY2UgKyAvLyBob3N0XG4gICAgICAgICAgKCcoPzonICsgLy8gSVAtbGl0ZXJhbFxuICAgICAgICAgICAgL1xcWyg/OlswLTlhLWZBLUY6Ll17Miw0OH18dlswLTlhLWZBLUZdK1xcLltcXHdcXC0ufiEkJicoKSorLDs9XSspXFxdL1xuICAgICAgICAgICAgICAuc291cmNlICtcbiAgICAgICAgICAgICd8JyArIC8vIElQdjRhZGRyZXNzIG9yIHJlZ2lzdGVyZWQgbmFtZVxuICAgICAgICAgICAgL1tcXHdcXC0ufiEkJicoKSorLDs9JV0qLy5zb3VyY2UgK1xuICAgICAgICAgICAgJyknKSArIC8vIFsgXCI6XCIgcG9ydCBdXG4gICAgICAgICAgLyg/OjpcXGQqKT8vLnNvdXJjZSxcbiAgICAgICAgJ20nXG4gICAgICApLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdhdXRob3JpdHktZGVsaW1pdGVyJzogL15cXC9cXC8vLFxuICAgICAgICAndXNlci1pbmZvLXNlZ21lbnQnOiB7XG4gICAgICAgICAgcGF0dGVybjogL15bXFx3XFwtLn4hJCYnKCkqKyw7PSU6XSpALyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICd1c2VyLWluZm8tZGVsaW1pdGVyJzogL0AkLyxcbiAgICAgICAgICAgICd1c2VyLWluZm8nOiAvXltcXHdcXC0ufiEkJicoKSorLDs9JTpdKy9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgICdwb3J0LXNlZ21lbnQnOiB7XG4gICAgICAgICAgcGF0dGVybjogLzpcXGQqJC8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAncG9ydC1kZWxpbWl0ZXInOiAvXjovLFxuICAgICAgICAgICAgcG9ydDogL15cXGQrL1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgaG9zdDoge1xuICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgJ2lwLWxpdGVyYWwnOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9eXFxbW1xcc1xcU10rXFxdJC8sXG4gICAgICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgICAgICdpcC1saXRlcmFsLWRlbGltaXRlcic6IC9eXFxbfFxcXSQvLFxuICAgICAgICAgICAgICAgICdpcHYtZnV0dXJlJzogL152W1xcc1xcU10rLyxcbiAgICAgICAgICAgICAgICAnaXB2Ni1hZGRyZXNzJzogL15bXFxzXFxTXSsvXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnaXB2NC1hZGRyZXNzJzpcbiAgICAgICAgICAgICAgL14oPzooPzpbMDMtOV1cXGQ/fFsxMl1cXGR7MCwyfSlcXC4pezN9KD86WzAzLTldXFxkP3xbMTJdXFxkezAsMn0pJC9cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIHBhdGg6IHtcbiAgICAgIHBhdHRlcm46IC9eW1xcd1xcLS5+ISQmJygpKissOz0lOkAvXSsvbSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAncGF0aC1zZXBhcmF0b3InOiAvXFwvL1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMudXJsID0gUHJpc20ubGFuZ3VhZ2VzLnVyaVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/uri.js\n"));

/***/ })

}]);