"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_regex"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/regex.js":
/*!**********************************************!*\
  !*** ./node_modules/refractor/lang/regex.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nmodule.exports = regex\nregex.displayName = 'regex'\nregex.aliases = []\nfunction regex(Prism) {\n  ;(function (Prism) {\n    var specialEscape = {\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n      alias: 'escape'\n    }\n    var escape =\n      /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/\n    var charSet = {\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var charSetWithoutDot = {\n      pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')'\n    var range = RegExp(rangeChar + '-' + rangeChar) // the name of a capturing group\n    var groupName = {\n      pattern: /(<|')[^<>']+(?=[>']$)/,\n      lookbehind: true,\n      alias: 'variable'\n    }\n    Prism.languages.regex = {\n      'char-class': {\n        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n        lookbehind: true,\n        inside: {\n          'char-class-negation': {\n            pattern: /(^\\[)\\^/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          'char-class-punctuation': {\n            pattern: /^\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          range: {\n            pattern: range,\n            inside: {\n              escape: escape,\n              'range-punctuation': {\n                pattern: /-/,\n                alias: 'operator'\n              }\n            }\n          },\n          'special-escape': specialEscape,\n          'char-set': charSetWithoutDot,\n          escape: escape\n        }\n      },\n      'special-escape': specialEscape,\n      'char-set': charSet,\n      backreference: [\n        {\n          // a backreference which is not an octal escape\n          pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n          alias: 'keyword'\n        },\n        {\n          pattern: /\\\\k<[^<>']+>/,\n          alias: 'keyword',\n          inside: {\n            'group-name': groupName\n          }\n        }\n      ],\n      anchor: {\n        pattern: /[$^]|\\\\[ABbGZz]/,\n        alias: 'function'\n      },\n      escape: escape,\n      group: [\n        {\n          // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n          // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n          // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n          pattern:\n            /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n          alias: 'punctuation',\n          inside: {\n            'group-name': groupName\n          }\n        },\n        {\n          pattern: /\\)/,\n          alias: 'punctuation'\n        }\n      ],\n      quantifier: {\n        pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n        alias: 'number'\n      },\n      alternation: {\n        pattern: /\\|/,\n        alias: 'keyword'\n      }\n    }\n  })(Prism)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yZWdleC5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsRUFBRSxhQUFhLEVBQUUsSUFBSSxhQUFhLFFBQVEsSUFBSSxZQUFZLEVBQUU7QUFDcEY7QUFDQSxnQ0FBZ0MsSUFBSSxJQUFJO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixJQUFJLElBQUk7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxFQUFFO0FBQ3RDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixjQUFjO0FBQzNDO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3JlZ2V4LmpzP2I3MjEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gcmVnZXhcbnJlZ2V4LmRpc3BsYXlOYW1lID0gJ3JlZ2V4J1xucmVnZXguYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiByZWdleChQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBzcGVjaWFsRXNjYXBlID0ge1xuICAgICAgcGF0dGVybjogL1xcXFxbXFxcXCgpe31bXFxdXiQrKj98Ll0vLFxuICAgICAgYWxpYXM6ICdlc2NhcGUnXG4gICAgfVxuICAgIHZhciBlc2NhcGUgPVxuICAgICAgL1xcXFwoPzp4W1xcZGEtZkEtRl17Mn18dVtcXGRhLWZBLUZdezR9fHVcXHtbXFxkYS1mQS1GXStcXH18MFswLTddezAsMn18WzEyM11bMC03XXsyfXxjW2EtekEtWl18LikvXG4gICAgdmFyIGNoYXJTZXQgPSB7XG4gICAgICBwYXR0ZXJuOiAvXFwufFxcXFxbd3NkXXxcXFxccFxce1tee31dK1xcfS9pLFxuICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgIH1cbiAgICB2YXIgY2hhclNldFdpdGhvdXREb3QgPSB7XG4gICAgICBwYXR0ZXJuOiAvXFxcXFt3c2RdfFxcXFxwXFx7W157fV0rXFx9L2ksXG4gICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgfVxuICAgIHZhciByYW5nZUNoYXIgPSAnKD86W15cXFxcXFxcXC1dfCcgKyBlc2NhcGUuc291cmNlICsgJyknXG4gICAgdmFyIHJhbmdlID0gUmVnRXhwKHJhbmdlQ2hhciArICctJyArIHJhbmdlQ2hhcikgLy8gdGhlIG5hbWUgb2YgYSBjYXB0dXJpbmcgZ3JvdXBcbiAgICB2YXIgZ3JvdXBOYW1lID0ge1xuICAgICAgcGF0dGVybjogLyg8fCcpW148PiddKyg/PVs+J10kKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLnJlZ2V4ID0ge1xuICAgICAgJ2NoYXItY2xhc3MnOiB7XG4gICAgICAgIHBhdHRlcm46IC8oKD86XnxbXlxcXFxdKSg/OlxcXFxcXFxcKSopXFxbKD86W15cXFxcXFxdXXxcXFxcW1xcc1xcU10pKlxcXS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgICdjaGFyLWNsYXNzLW5lZ2F0aW9uJzoge1xuICAgICAgICAgICAgcGF0dGVybjogLyheXFxbKVxcXi8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgICAgICB9LFxuICAgICAgICAgICdjaGFyLWNsYXNzLXB1bmN0dWF0aW9uJzoge1xuICAgICAgICAgICAgcGF0dGVybjogL15cXFt8XFxdJC8sXG4gICAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcmFuZ2U6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IHJhbmdlLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIGVzY2FwZTogZXNjYXBlLFxuICAgICAgICAgICAgICAncmFuZ2UtcHVuY3R1YXRpb24nOiB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogLy0vLFxuICAgICAgICAgICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgICdzcGVjaWFsLWVzY2FwZSc6IHNwZWNpYWxFc2NhcGUsXG4gICAgICAgICAgJ2NoYXItc2V0JzogY2hhclNldFdpdGhvdXREb3QsXG4gICAgICAgICAgZXNjYXBlOiBlc2NhcGVcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgICdzcGVjaWFsLWVzY2FwZSc6IHNwZWNpYWxFc2NhcGUsXG4gICAgICAnY2hhci1zZXQnOiBjaGFyU2V0LFxuICAgICAgYmFja3JlZmVyZW5jZTogW1xuICAgICAgICB7XG4gICAgICAgICAgLy8gYSBiYWNrcmVmZXJlbmNlIHdoaWNoIGlzIG5vdCBhbiBvY3RhbCBlc2NhcGVcbiAgICAgICAgICBwYXR0ZXJuOiAvXFxcXCg/IVsxMjNdWzAtN117Mn0pWzEtOV0vLFxuICAgICAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC9cXFxcazxbXjw+J10rPi8sXG4gICAgICAgICAgYWxpYXM6ICdrZXl3b3JkJyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdncm91cC1uYW1lJzogZ3JvdXBOYW1lXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgYW5jaG9yOiB7XG4gICAgICAgIHBhdHRlcm46IC9bJF5dfFxcXFxbQUJiR1p6XS8sXG4gICAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgICB9LFxuICAgICAgZXNjYXBlOiBlc2NhcGUsXG4gICAgICBncm91cDogW1xuICAgICAgICB7XG4gICAgICAgICAgLy8gaHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vamF2YXNlLzEwL2RvY3MvYXBpL2phdmEvdXRpbC9yZWdleC9QYXR0ZXJuLmh0bWxcbiAgICAgICAgICAvLyBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9kb3RuZXQvc3RhbmRhcmQvYmFzZS10eXBlcy9yZWd1bGFyLWV4cHJlc3Npb24tbGFuZ3VhZ2UtcXVpY2stcmVmZXJlbmNlP3ZpZXc9bmV0ZnJhbWV3b3JrLTQuNy4yI2dyb3VwaW5nLWNvbnN0cnVjdHNcbiAgICAgICAgICAvLyAoKSwgKD88bmFtZT4pLCAoPyduYW1lJyksICg/PiksICg/OiksICg/PSksICg/ISksICg/PD0pLCAoPzwhKSwgKD9pcy1tKSwgKD9pLW06KVxuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvXFwoKD86XFw/KD86PFtePD4nXSs+fCdbXjw+J10rJ3xbPjpdfDw/Wz0hXXxbaWRtbnN1eFVdKyg/Oi1baWRtbnN1eFVdKyk/Oj8pKT8vLFxuICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgJ2dyb3VwLW5hbWUnOiBncm91cE5hbWVcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFwpLyxcbiAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgcXVhbnRpZmllcjoge1xuICAgICAgICBwYXR0ZXJuOiAvKD86WysqP118XFx7XFxkKyg/OixcXGQqKT9cXH0pWz8rXT8vLFxuICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICBhbHRlcm5hdGlvbjoge1xuICAgICAgICBwYXR0ZXJuOiAvXFx8LyxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfVxuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/regex.js\n"));

/***/ })

}]);