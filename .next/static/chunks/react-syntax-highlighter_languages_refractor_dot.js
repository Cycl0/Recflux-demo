"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_dot"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/dot.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/dot.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nmodule.exports = dot\ndot.displayName = 'dot'\ndot.aliases = ['gv']\nfunction dot(Prism) {\n  // https://www.graphviz.org/doc/info/lang.html\n  ;(function (Prism) {\n    var ID =\n      '(?:' +\n      [\n        // an identifier\n        /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source, // a number\n        /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source, // a double-quoted string\n        /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source, // HTML-like string\n        /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/\n          .source\n      ].join('|') +\n      ')'\n    var IDInside = {\n      markup: {\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\n        lookbehind: true,\n        alias: ['language-markup', 'language-html', 'language-xml'],\n        inside: Prism.languages.markup\n      }\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function withID(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return ID\n        }),\n        flags\n      )\n    }\n    Prism.languages.dot = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n        greedy: true\n      },\n      'graph-name': {\n        pattern: withID(\n          /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name',\n        inside: IDInside\n      },\n      'attr-value': {\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      'attr-name': {\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n      'compass-point': {\n        pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n        lookbehind: true,\n        alias: 'builtin'\n      },\n      node: {\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      operator: /[=:]|-[->]/,\n      punctuation: /[\\[\\]{};,]/\n    }\n    Prism.languages.gv = Prism.languages.dot\n  })(Prism)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kb3QuanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsUUFBUTtBQUN2QixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2RvdC5qcz8xMDliIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRvdFxuZG90LmRpc3BsYXlOYW1lID0gJ2RvdCdcbmRvdC5hbGlhc2VzID0gWydndiddXG5mdW5jdGlvbiBkb3QoUHJpc20pIHtcbiAgLy8gaHR0cHM6Ly93d3cuZ3JhcGh2aXoub3JnL2RvYy9pbmZvL2xhbmcuaHRtbFxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBJRCA9XG4gICAgICAnKD86JyArXG4gICAgICBbXG4gICAgICAgIC8vIGFuIGlkZW50aWZpZXJcbiAgICAgICAgL1thLXpBLVpfXFx4ODAtXFx1RkZGRl1bXFx3XFx4ODAtXFx1RkZGRl0qLy5zb3VyY2UsIC8vIGEgbnVtYmVyXG4gICAgICAgIC8tPyg/OlxcLlxcZCt8XFxkKyg/OlxcLlxcZCopPykvLnNvdXJjZSwgLy8gYSBkb3VibGUtcXVvdGVkIHN0cmluZ1xuICAgICAgICAvXCJbXlwiXFxcXF0qKD86XFxcXFtcXHNcXFNdW15cIlxcXFxdKikqXCIvLnNvdXJjZSwgLy8gSFRNTC1saWtlIHN0cmluZ1xuICAgICAgICAvPCg/OltePD5dfCg/ITwhLS0pPCg/OltePD5cIiddfFwiW15cIl0qXCJ8J1teJ10qJykrPnw8IS0tKD86W14tXXwtKD8hLT4pKSotLT4pKj4vXG4gICAgICAgICAgLnNvdXJjZVxuICAgICAgXS5qb2luKCd8JykgK1xuICAgICAgJyknXG4gICAgdmFyIElESW5zaWRlID0ge1xuICAgICAgbWFya3VwOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXjwpW1xcc1xcU10rKD89PiQpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6IFsnbGFuZ3VhZ2UtbWFya3VwJywgJ2xhbmd1YWdlLWh0bWwnLCAnbGFuZ3VhZ2UteG1sJ10sXG4gICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLm1hcmt1cFxuICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc291cmNlXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGZsYWdzXG4gICAgICogQHJldHVybnMge1JlZ0V4cH1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiB3aXRoSUQoc291cmNlLCBmbGFncykge1xuICAgICAgcmV0dXJuIFJlZ0V4cChcbiAgICAgICAgc291cmNlLnJlcGxhY2UoLzxJRD4vZywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBJRFxuICAgICAgICB9KSxcbiAgICAgICAgZmxhZ3NcbiAgICAgIClcbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmRvdCA9IHtcbiAgICAgIGNvbW1lbnQ6IHtcbiAgICAgICAgcGF0dGVybjogL1xcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj9cXCpcXC98XiMuKi9tLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICAnZ3JhcGgtbmFtZSc6IHtcbiAgICAgICAgcGF0dGVybjogd2l0aElEKFxuICAgICAgICAgIC8oXFxiKD86ZGlncmFwaHxncmFwaHxzdWJncmFwaClbIFxcdFxcclxcbl0rKTxJRD4vLnNvdXJjZSxcbiAgICAgICAgICAnaSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ2NsYXNzLW5hbWUnLFxuICAgICAgICBpbnNpZGU6IElESW5zaWRlXG4gICAgICB9LFxuICAgICAgJ2F0dHItdmFsdWUnOiB7XG4gICAgICAgIHBhdHRlcm46IHdpdGhJRCgvKD1bIFxcdFxcclxcbl0qKTxJRD4vLnNvdXJjZSksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiBJREluc2lkZVxuICAgICAgfSxcbiAgICAgICdhdHRyLW5hbWUnOiB7XG4gICAgICAgIHBhdHRlcm46IHdpdGhJRCgvKFtcXFs7LCBcXHRcXHJcXG5dKTxJRD4oPz1bIFxcdFxcclxcbl0qPSkvLnNvdXJjZSksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiBJREluc2lkZVxuICAgICAgfSxcbiAgICAgIGtleXdvcmQ6IC9cXGIoPzpkaWdyYXBofGVkZ2V8Z3JhcGh8bm9kZXxzdHJpY3R8c3ViZ3JhcGgpXFxiL2ksXG4gICAgICAnY29tcGFzcy1wb2ludCc6IHtcbiAgICAgICAgcGF0dGVybjogLyg6WyBcXHRcXHJcXG5dKikoPzpbZXdjX118W25zXVtld10/KSg/IVtcXHdcXHg4MC1cXHVGRkZGXSkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ2J1aWx0aW4nXG4gICAgICB9LFxuICAgICAgbm9kZToge1xuICAgICAgICBwYXR0ZXJuOiB3aXRoSUQoLyhefFteLS5cXHdcXHg4MC1cXHVGRkZGXFxcXF0pPElEPi8uc291cmNlKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IElESW5zaWRlXG4gICAgICB9LFxuICAgICAgb3BlcmF0b3I6IC9bPTpdfC1bLT5dLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvW1xcW1xcXXt9OyxdL1xuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMuZ3YgPSBQcmlzbS5sYW5ndWFnZXMuZG90XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/dot.js\n"));

/***/ })

}]);