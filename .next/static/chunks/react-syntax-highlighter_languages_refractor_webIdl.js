"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_webIdl"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/web-idl.js":
/*!************************************************!*\
  !*** ./node_modules/refractor/lang/web-idl.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nmodule.exports = webIdl\nwebIdl.displayName = 'webIdl'\nwebIdl.aliases = []\nfunction webIdl(Prism) {\n  ;(function (Prism) {\n    var id = /(?:\\B-|\\b_|\\b)[A-Za-z][\\w-]*(?![\\w-])/.source\n    var type =\n      '(?:' +\n      /\\b(?:unsigned\\s+)?long\\s+long(?![\\w-])/.source +\n      '|' +\n      /\\b(?:unrestricted|unsigned)\\s+[a-z]+(?![\\w-])/.source +\n      '|' +\n      /(?!(?:unrestricted|unsigned)\\b)/.source +\n      id +\n      /(?:\\s*<(?:[^<>]|<[^<>]*>)*>)?/.source +\n      ')' +\n      /(?:\\s*\\?)?/.source\n    var typeInside = {}\n    Prism.languages['web-idl'] = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      namespace: {\n        pattern: RegExp(/(\\bnamespace\\s+)/.source + id),\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(^|[^\\w-])(?:iterable|maplike|setlike)\\s*<(?:[^<>]|<[^<>]*>)*>/,\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:attribute|const|deleter|getter|optional|setter)\\s+)/.source +\n              type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // callback return type\n          pattern: RegExp(\n            '(' + /\\bcallback\\s+/.source + id + /\\s*=\\s*/.source + ')' + type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // typedef\n          pattern: RegExp(/(\\btypedef\\b\\s*)/.source + type),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:callback|dictionary|enum|interface(?:\\s+mixin)?)\\s+)(?!(?:interface|mixin)\\b)/\n              .source + id\n          ),\n          lookbehind: true\n        },\n        {\n          // inheritance\n          pattern: RegExp(/(:\\s*)/.source + id),\n          lookbehind: true\n        }, // includes and implements\n        RegExp(id + /(?=\\s+(?:implements|includes)\\b)/.source),\n        {\n          pattern: RegExp(/(\\b(?:implements|includes)\\s+)/.source + id),\n          lookbehind: true\n        },\n        {\n          // function return type, parameter types, and dictionary members\n          pattern: RegExp(\n            type +\n              '(?=' +\n              /\\s*(?:\\.{3}\\s*)?/.source +\n              id +\n              /\\s*[(),;=]/.source +\n              ')'\n          ),\n          inside: typeInside\n        }\n      ],\n      builtin:\n        /\\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\\b/,\n      keyword: [\n        /\\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\\b/, // type keywords\n        /\\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\\b/\n      ],\n      boolean: /\\b(?:false|true)\\b/,\n      number: {\n        pattern:\n          /(^|[^\\w-])-?(?:0x[0-9a-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|NaN|Infinity)(?![\\w-])/i,\n        lookbehind: true\n      },\n      operator: /\\.{3}|[=:?<>-]/,\n      punctuation: /[(){}[\\].,;]/\n    }\n    for (var key in Prism.languages['web-idl']) {\n      if (key !== 'class-name') {\n        typeInside[key] = Prism.languages['web-idl'][key]\n      }\n    }\n    Prism.languages['webidl'] = Prism.languages['web-idl']\n  })(Prism)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy93ZWItaWRsLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixFQUFFO0FBQzFCO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLG9CQUFvQixFQUFFO0FBQ3RCLHlCQUF5QixNQUFNO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy93ZWItaWRsLmpzP2IxMjUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gd2ViSWRsXG53ZWJJZGwuZGlzcGxheU5hbWUgPSAnd2ViSWRsJ1xud2ViSWRsLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gd2ViSWRsKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGlkID0gLyg/OlxcQi18XFxiX3xcXGIpW0EtWmEtel1bXFx3LV0qKD8hW1xcdy1dKS8uc291cmNlXG4gICAgdmFyIHR5cGUgPVxuICAgICAgJyg/OicgK1xuICAgICAgL1xcYig/OnVuc2lnbmVkXFxzKyk/bG9uZ1xccytsb25nKD8hW1xcdy1dKS8uc291cmNlICtcbiAgICAgICd8JyArXG4gICAgICAvXFxiKD86dW5yZXN0cmljdGVkfHVuc2lnbmVkKVxccytbYS16XSsoPyFbXFx3LV0pLy5zb3VyY2UgK1xuICAgICAgJ3wnICtcbiAgICAgIC8oPyEoPzp1bnJlc3RyaWN0ZWR8dW5zaWduZWQpXFxiKS8uc291cmNlICtcbiAgICAgIGlkICtcbiAgICAgIC8oPzpcXHMqPCg/OltePD5dfDxbXjw+XSo+KSo+KT8vLnNvdXJjZSArXG4gICAgICAnKScgK1xuICAgICAgLyg/OlxccypcXD8pPy8uc291cmNlXG4gICAgdmFyIHR5cGVJbnNpZGUgPSB7fVxuICAgIFByaXNtLmxhbmd1YWdlc1snd2ViLWlkbCddID0ge1xuICAgICAgY29tbWVudDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFwvXFwvLip8XFwvXFwqW1xcc1xcU10qP1xcKlxcLy8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvXCJbXlwiXSpcIi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIG5hbWVzcGFjZToge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoLyhcXGJuYW1lc3BhY2VcXHMrKS8uc291cmNlICsgaWQpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgJ2NsYXNzLW5hbWUnOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLyhefFteXFx3LV0pKD86aXRlcmFibGV8bWFwbGlrZXxzZXRsaWtlKVxccyo8KD86W148Pl18PFtePD5dKj4pKj4vLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB0eXBlSW5zaWRlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgICAvKFxcYig/OmF0dHJpYnV0ZXxjb25zdHxkZWxldGVyfGdldHRlcnxvcHRpb25hbHxzZXR0ZXIpXFxzKykvLnNvdXJjZSArXG4gICAgICAgICAgICAgIHR5cGVcbiAgICAgICAgICApLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB0eXBlSW5zaWRlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBjYWxsYmFjayByZXR1cm4gdHlwZVxuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgICcoJyArIC9cXGJjYWxsYmFja1xccysvLnNvdXJjZSArIGlkICsgL1xccyo9XFxzKi8uc291cmNlICsgJyknICsgdHlwZVxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHR5cGVJbnNpZGVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIHR5cGVkZWZcbiAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoLyhcXGJ0eXBlZGVmXFxiXFxzKikvLnNvdXJjZSArIHR5cGUpLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB0eXBlSW5zaWRlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgICAvKFxcYig/OmNhbGxiYWNrfGRpY3Rpb25hcnl8ZW51bXxpbnRlcmZhY2UoPzpcXHMrbWl4aW4pPylcXHMrKSg/ISg/OmludGVyZmFjZXxtaXhpbilcXGIpL1xuICAgICAgICAgICAgICAuc291cmNlICsgaWRcbiAgICAgICAgICApLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIGluaGVyaXRhbmNlXG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKC8oOlxccyopLy5zb3VyY2UgKyBpZCksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LCAvLyBpbmNsdWRlcyBhbmQgaW1wbGVtZW50c1xuICAgICAgICBSZWdFeHAoaWQgKyAvKD89XFxzKyg/OmltcGxlbWVudHN8aW5jbHVkZXMpXFxiKS8uc291cmNlKSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cCgvKFxcYig/OmltcGxlbWVudHN8aW5jbHVkZXMpXFxzKykvLnNvdXJjZSArIGlkKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBmdW5jdGlvbiByZXR1cm4gdHlwZSwgcGFyYW1ldGVyIHR5cGVzLCBhbmQgZGljdGlvbmFyeSBtZW1iZXJzXG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICAgdHlwZSArXG4gICAgICAgICAgICAgICcoPz0nICtcbiAgICAgICAgICAgICAgL1xccyooPzpcXC57M31cXHMqKT8vLnNvdXJjZSArXG4gICAgICAgICAgICAgIGlkICtcbiAgICAgICAgICAgICAgL1xccypbKCksOz1dLy5zb3VyY2UgK1xuICAgICAgICAgICAgICAnKSdcbiAgICAgICAgICApLFxuICAgICAgICAgIGluc2lkZTogdHlwZUluc2lkZVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgYnVpbHRpbjpcbiAgICAgICAgL1xcYig/OkFycmF5QnVmZmVyfEJpZ0ludDY0QXJyYXl8QmlnVWludDY0QXJyYXl8Qnl0ZVN0cmluZ3xET01TdHJpbmd8RGF0YVZpZXd8RmxvYXQzMkFycmF5fEZsb2F0NjRBcnJheXxGcm96ZW5BcnJheXxJbnQxNkFycmF5fEludDMyQXJyYXl8SW50OEFycmF5fE9ic2VydmFibGVBcnJheXxQcm9taXNlfFVTVlN0cmluZ3xVaW50MTZBcnJheXxVaW50MzJBcnJheXxVaW50OEFycmF5fFVpbnQ4Q2xhbXBlZEFycmF5KVxcYi8sXG4gICAgICBrZXl3b3JkOiBbXG4gICAgICAgIC9cXGIoPzphc3luY3xhdHRyaWJ1dGV8Y2FsbGJhY2t8Y29uc3R8Y29uc3RydWN0b3J8ZGVsZXRlcnxkaWN0aW9uYXJ5fGVudW18Z2V0dGVyfGltcGxlbWVudHN8aW5jbHVkZXN8aW5oZXJpdHxpbnRlcmZhY2V8bWl4aW58bmFtZXNwYWNlfG51bGx8b3B0aW9uYWx8b3J8cGFydGlhbHxyZWFkb25seXxyZXF1aXJlZHxzZXR0ZXJ8c3RhdGljfHN0cmluZ2lmaWVyfHR5cGVkZWZ8dW5yZXN0cmljdGVkKVxcYi8sIC8vIHR5cGUga2V5d29yZHNcbiAgICAgICAgL1xcYig/OmFueXxiaWdpbnR8Ym9vbGVhbnxieXRlfGRvdWJsZXxmbG9hdHxpdGVyYWJsZXxsb25nfG1hcGxpa2V8b2JqZWN0fG9jdGV0fHJlY29yZHxzZXF1ZW5jZXxzZXRsaWtlfHNob3J0fHN5bWJvbHx1bmRlZmluZWR8dW5zaWduZWR8dm9pZClcXGIvXG4gICAgICBdLFxuICAgICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICAgIG51bWJlcjoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXlxcdy1dKS0/KD86MHhbMC05YS1mXSt8KD86XFxkKyg/OlxcLlxcZCopP3xcXC5cXGQrKSg/OmVbKy1dP1xcZCspP3xOYU58SW5maW5pdHkpKD8hW1xcdy1dKS9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgb3BlcmF0b3I6IC9cXC57M318Wz06Pzw+LV0vLFxuICAgICAgcHVuY3R1YXRpb246IC9bKCl7fVtcXF0uLDtdL1xuICAgIH1cbiAgICBmb3IgKHZhciBrZXkgaW4gUHJpc20ubGFuZ3VhZ2VzWyd3ZWItaWRsJ10pIHtcbiAgICAgIGlmIChrZXkgIT09ICdjbGFzcy1uYW1lJykge1xuICAgICAgICB0eXBlSW5zaWRlW2tleV0gPSBQcmlzbS5sYW5ndWFnZXNbJ3dlYi1pZGwnXVtrZXldXG4gICAgICB9XG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlc1snd2ViaWRsJ10gPSBQcmlzbS5sYW5ndWFnZXNbJ3dlYi1pZGwnXVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/web-idl.js\n"));

/***/ })

}]);