"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_v"],{

/***/ "(app-pages-browser)/./node_modules/refractor/lang/v.js":
/*!******************************************!*\
  !*** ./node_modules/refractor/lang/v.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nmodule.exports = v\nv.displayName = 'v'\nv.aliases = []\nfunction v(Prism) {\n  ;(function (Prism) {\n    var interpolationExpr = {\n      pattern: /[\\s\\S]+/,\n      inside: null\n    }\n    Prism.languages.v = Prism.languages.extend('clike', {\n      string: {\n        pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        alias: 'quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n            lookbehind: true,\n            inside: {\n              'interpolation-variable': {\n                pattern: /^\\$\\w[\\s\\S]*$/,\n                alias: 'variable'\n              },\n              'interpolation-punctuation': {\n                pattern: /^\\$\\{|\\}$/,\n                alias: 'punctuation'\n              },\n              'interpolation-expression': interpolationExpr\n            }\n          }\n        }\n      },\n      'class-name': {\n        pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /(?:\\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:else|for|if)|#(?:flag|include))\\b/,\n      number:\n        /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n      operator:\n        /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n      builtin:\n        /\\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n    })\n    interpolationExpr.inside = Prism.languages.v\n    Prism.languages.insertBefore('v', 'string', {\n      char: {\n        pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\n        // using {1,2} instead of `u` flag for compatibility\n        alias: 'rune'\n      }\n    })\n    Prism.languages.insertBefore('v', 'operator', {\n      attribute: {\n        pattern:\n          /(^[\\t ]*)\\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\\]/m,\n        lookbehind: true,\n        alias: 'annotation',\n        inside: {\n          punctuation: /[\\[\\]]/,\n          keyword: /\\w+/\n        }\n      },\n      generic: {\n        pattern: /<\\w+>(?=\\s*[\\)\\{])/,\n        inside: {\n          punctuation: /[<>]/,\n          'class-name': /\\w+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('v', 'function', {\n      'generic-function': {\n        // e.g. foo<T>( ...\n        pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<\\w+>/,\n            inside: Prism.languages.v.generic.inside\n          }\n        }\n      }\n    })\n  })(Prism)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy92LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxFQUFFLFVBQVUsSUFBSSxJQUFJO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQSwrQkFBK0IsR0FBRztBQUNsQztBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsSUFBSTtBQUN0QyxrQkFBa0IsS0FBSztBQUN2QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdi5qcz9mMjRjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5tb2R1bGUuZXhwb3J0cyA9IHZcbnYuZGlzcGxheU5hbWUgPSAndidcbnYuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiB2KFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGludGVycG9sYXRpb25FeHByID0ge1xuICAgICAgcGF0dGVybjogL1tcXHNcXFNdKy8sXG4gICAgICBpbnNpZGU6IG51bGxcbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLnYgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvcj8oW1wiJ10pKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICAgIGFsaWFzOiAncXVvdGVkLXN0cmluZycsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgaW50ZXJwb2xhdGlvbjoge1xuICAgICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgICAgLygoPzpefFteXFxcXF0pKD86XFxcXHsyfSkqKVxcJCg/Olxce1tee31dKlxcfXxcXHcrKD86XFwuXFx3Kyg/OlxcKFteXFwoXFwpXSpcXCkpP3xcXFtbXlxcW1xcXV0rXFxdKSopLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgJ2ludGVycG9sYXRpb24tdmFyaWFibGUnOiB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogL15cXCRcXHdbXFxzXFxTXSokLyxcbiAgICAgICAgICAgICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAnaW50ZXJwb2xhdGlvbi1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvXlxcJFxce3xcXH0kLyxcbiAgICAgICAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAnaW50ZXJwb2xhdGlvbi1leHByZXNzaW9uJzogaW50ZXJwb2xhdGlvbkV4cHJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgICAgcGF0dGVybjogLyhcXGIoPzplbnVtfGludGVyZmFjZXxzdHJ1Y3R8dHlwZSlcXHMrKSg/OkNcXC4pP1xcdysvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAga2V5d29yZDpcbiAgICAgICAgLyg/OlxcYig/Ol9fZ2xvYmFsfGFzfGFzbXxhc3NlcnR8YXRvbWljfGJyZWFrfGNoYW58Y29uc3R8Y29udGludWV8ZGVmZXJ8ZWxzZXxlbWJlZHxlbnVtfGZufGZvcnxnbyg/OnRvKT98aWZ8aW1wb3J0fGlufGludGVyZmFjZXxpc3xsb2NrfG1hdGNofG1vZHVsZXxtdXR8bm9uZXxvcnxwdWJ8cmV0dXJufHJsb2NrfHNlbGVjdHxzaGFyZWR8c2l6ZW9mfHN0YXRpY3xzdHJ1Y3R8dHlwZSg/Om9mKT98dW5pb258dW5zYWZlKXxcXCQoPzplbHNlfGZvcnxpZil8Iyg/OmZsYWd8aW5jbHVkZSkpXFxiLyxcbiAgICAgIG51bWJlcjpcbiAgICAgICAgL1xcYig/OjB4W2EtZlxcZF0rKD86X1thLWZcXGRdKykqfDBiWzAxXSsoPzpfWzAxXSspKnwwb1swLTddKyg/Ol9bMC03XSspKnxcXGQrKD86X1xcZCspKig/OlxcLlxcZCsoPzpfXFxkKykqKT8pXFxiL2ksXG4gICAgICBvcGVyYXRvcjpcbiAgICAgICAgL358XFw/fFsqXFwvJV4hPV09P3xcXCtbPStdP3wtWz0tXT98XFx8Wz18XT98Jig/Oj18JnxcXF49Pyk/fD4oPzo+PT98PSk/fDwoPzo8PT98PXwtKT98Oj18XFwuXFwuXFwuPy8sXG4gICAgICBidWlsdGluOlxuICAgICAgICAvXFxiKD86YW55KD86X2Zsb2F0fF9pbnQpP3xib29sfGJ5dGUoPzpwdHIpP3xjaGFycHRyfGYoPzozMnw2NCl8aSg/Ojh8MTZ8NjR8MTI4fG50KXxydW5lfHNpemVfdHxzdHJpbmd8dSg/OjE2fDMyfDY0fDEyOCl8dm9pZHB0cilcXGIvXG4gICAgfSlcbiAgICBpbnRlcnBvbGF0aW9uRXhwci5pbnNpZGUgPSBQcmlzbS5sYW5ndWFnZXMudlxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3YnLCAnc3RyaW5nJywge1xuICAgICAgY2hhcjoge1xuICAgICAgICBwYXR0ZXJuOiAvYCg/OlxcXFxgfFxcXFw/W15gXXsxLDJ9KWAvLFxuICAgICAgICAvLyB1c2luZyB7MSwyfSBpbnN0ZWFkIG9mIGB1YCBmbGFnIGZvciBjb21wYXRpYmlsaXR5XG4gICAgICAgIGFsaWFzOiAncnVuZSdcbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3YnLCAnb3BlcmF0b3InLCB7XG4gICAgICBhdHRyaWJ1dGU6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF5bXFx0IF0qKVxcWyg/OmRlcHJlY2F0ZWR8ZGlyZWN0X2FycmF5X2FjY2Vzc3xmbGFnfGlubGluZXxsaXZlfHJlZl9vbmx5fHR5cGVkZWZ8dW5zYWZlX2ZufHdpbmRvd3Nfc3RkY2FsbClcXF0vbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdhbm5vdGF0aW9uJyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC9bXFxbXFxdXS8sXG4gICAgICAgICAga2V5d29yZDogL1xcdysvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBnZW5lcmljOiB7XG4gICAgICAgIHBhdHRlcm46IC88XFx3Kz4oPz1cXHMqW1xcKVxce10pLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC9bPD5dLyxcbiAgICAgICAgICAnY2xhc3MtbmFtZSc6IC9cXHcrL1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCd2JywgJ2Z1bmN0aW9uJywge1xuICAgICAgJ2dlbmVyaWMtZnVuY3Rpb24nOiB7XG4gICAgICAgIC8vIGUuZy4gZm9vPFQ+KCAuLi5cbiAgICAgICAgcGF0dGVybjogL1xcYlxcdytcXHMqPFxcdys+KD89XFwoKS8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGZ1bmN0aW9uOiAvXlxcdysvLFxuICAgICAgICAgIGdlbmVyaWM6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC88XFx3Kz4vLFxuICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMudi5nZW5lcmljLmluc2lkZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/refractor/lang/v.js\n"));

/***/ })

}]);